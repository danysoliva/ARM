using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;

using ARM.Classes;
using System.Data.SqlClient;
using System.Data;


namespace ARM.Production
{
    public partial class Mant_OP_Status : DevExpress.XtraEditors.XtraForm
    {
        #region Variables_Globales
        DataOperations dp = new DataOperations();
        DataTable dtOrdenes;
        DataTable dtEstructura;
        FMOP fmop = new FMOP();

        int idOrden = 0;
        int idMix   = 0;
        int mix_num = 0;
        #endregion


        public Mant_OP_Status()
        {
            InitializeComponent();
            cargar_grd_ordenes();
        }


        void cargar_grd_ordenes() {
            try
            {
                #region Parametros_SP_Entrada
                SqlCommand cmd = new SqlCommand();
                cmd.CommandType = CommandType.StoredProcedure;

                cmd.Parameters.Add(new SqlParameter("@status_ini", SqlDbType.Int));
                cmd.Parameters.Add(new SqlParameter("@status_fin", SqlDbType.Int));
                cmd.Parameters["@status_ini"].Value = 40;
                cmd.Parameters["@status_fin"].Value = 80;
                #endregion

                gridControl1.DataSource= dp.APMS_Exec_SP_Get_Data("OP_Get_Mix_by_Orders_Status", cmd);
            }
            catch (Exception ex)
            {
                MessageBox.Show(string.Format("Ha ocurrido un error al cargar la informacion de ordenes de producción\n\nDetalle: {0}", ex.Message), "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void gridView1_FocusedRowChanged(object sender, DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs e)
        {
                if (e.FocusedRowHandle >= 0){
                    idOrden = int.Parse(gridView1.GetDataRow(e.FocusedRowHandle)["order_id"].ToString());
                    idMix   = int.Parse(gridView1.GetDataRow(e.FocusedRowHandle)["mix_id"].ToString());
                    mix_num = int.Parse(gridView1.GetDataRow(e.FocusedRowHandle)["mix_num"].ToString());

                    groupControl2.Text = string.Format("Estructura Mezclado: {0}", gridView1.GetDataRow(e.FocusedRowHandle)["mix_fullCode"].ToString());

                    cargar_grd_ordenes_estructuras();
                }
        }

        void cargar_grd_ordenes_estructuras() {
            try
            {
                gridControl2.DataSource = fmop.apms_get_order_structure_per_mix(idOrden, mix_num);
            }
            catch (Exception ex)
            {
                MessageBox.Show(string.Format("Ha ocurrido un error al cargar la informacion de estructura de producción\n\nDetalle: {0}", ex.Message), "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }        
        }

        private void gridView1_RowStyle(object sender, DevExpress.XtraGrid.Views.Grid.RowStyleEventArgs e)
        {
            #region AutorRow_Color_Diferente
            if (e.RowHandle == DevExpress.XtraGrid.GridControl.AutoFilterRowHandle)
            {
                e.Appearance.BackColor = Color.FromArgb(200, 255, 255, 204);
            }
            #endregion
        }

        private void gridView2_RowStyle(object sender, DevExpress.XtraGrid.Views.Grid.RowStyleEventArgs e)
        {
            #region AutorRow_Color_Diferente
            if (e.RowHandle == DevExpress.XtraGrid.GridControl.AutoFilterRowHandle)
            {
                e.Appearance.BackColor = Color.FromArgb(200, 255, 255, 204);
            }
            #endregion
        }



        /// <summary>
        /// Cambia Status a los MIX de las OP
        /// </summary>
        /// <param name="order_mix_id">Numero de la Orden de Producción</param>
        /// <param name="mix_num">1=Primer Mesclado, 2=Segundo Mesclado</param>
        /// <param name="status">50=Activar, 60=Suspender</param>
        void setStatus_OP_mix(int mix_id, int status)    // Seteando Status de MIX de OP ..
        {
            //if (status != 50 & status != 60 & status != 95) return;
            try
            {
                #region Parametros_SP_Entrada
                SqlCommand cmd = new SqlCommand();
                cmd.CommandType = CommandType.StoredProcedure;

                cmd.Parameters.Add(new SqlParameter("@mix_id", SqlDbType.Int));
                cmd.Parameters.Add(new SqlParameter("@status", SqlDbType.Int));
                cmd.Parameters["@mix_id"].Value = mix_id;
                cmd.Parameters["@status"].Value = status;
                #endregion

                dp.APMS_Exec_SP_Get_Data("OP_Set_Mix_Status_by_MixID", cmd);
            }
            catch (Exception) { throw; }
        }

        /// <summary>
        /// Revisa si ya existe un MIX de la OP con status indicado
        /// </summary>
        /// <param name="order_id">Numero de OP</param>
        /// <param name="mix_num">1=Primer Mesclado, 2=Segundo Mesclado</param>
        /// <param name="status">50=Activado, 60=Suspendido</param>
        /// <returns></returns>
        bool existenOP_Mix_Status(int mix_num, int status)    // Existe Mesclado con STS ..
        {
            #region query
            String query = String.Format(@"SELECT Count(*) cantidad FROM OP_Production_Orders_Main_Mix where mix_num= {0} and status= {1}"
                , mix_num
                , status
                );
            #endregion

            DataTable dtTEMP = new DataTable();
            dtTEMP = dp.APMS_GetSelectData(query).Tables[0];

            return (Convert.ToInt32(dtTEMP.Rows[0]["cantidad"]) > 0 ? true : false);
        }

        private void btn_Actualizar_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            cargar_grd_ordenes();
            cargar_grd_ordenes_estructuras();
        }

        private void btn_Activar_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (Convert.ToInt32(gridView1.RowCount) <= 0) return;
            if (existenOP_Mix_Status(mix_num, 50))
            {
                MessageBox.Show("No se puede activar, hay otro mesclado activo.", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }

            DialogResult resultado = MessageBox.Show("¿Esta realmente seguro?", "Confirmación", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
            if (resultado != System.Windows.Forms.DialogResult.Yes) return;

            setStatus_OP_mix(idMix, 50);
            cargar_grd_ordenes();
            cargar_grd_ordenes_estructuras();

        }

        private void btn_Suspender_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (Convert.ToInt32(gridView1.RowCount) <= 0) return;
            DialogResult resultado = MessageBox.Show("¿Esta realmente seguro?", "Confirmación", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
            if (resultado != System.Windows.Forms.DialogResult.Yes) return;

            setStatus_OP_mix(idMix, 60);
            cargar_grd_ordenes();
            cargar_grd_ordenes_estructuras();
        }

        private void btn_Finalizar_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (Convert.ToInt32(gridView1.RowCount) <= 0) return;
            DialogResult resultado = MessageBox.Show("¿Esta realmente seguro?", "Confirmación", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
            if (resultado != System.Windows.Forms.DialogResult.Yes) return;

            setStatus_OP_mix(idMix, 95);
            cargar_grd_ordenes();
            cargar_grd_ordenes_estructuras();
        }


    }
}
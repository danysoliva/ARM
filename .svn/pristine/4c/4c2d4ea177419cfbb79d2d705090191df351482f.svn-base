using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;

using ARM.Classes;
using System.Data.SqlClient;

namespace ARM.Mants
{
    public partial class Mants_Bins : DevExpress.XtraEditors.XtraForm
    {
        #region Variables_Globales
        DataOperations dp = new DataOperations();
        DataSet ds = new DataSet();
        DataTable dt = new DataTable();

        #endregion

        public Mants_Bins()
        {
            InitializeComponent();
            load_combo(); cmbl_gruposBin.EditValue = 1;
            load_grid();
        }

        void load_grid()
        {
            #region Parametros_SP_Entrada
            SqlCommand cmd = new SqlCommand();
            cmd.CommandType = CommandType.StoredProcedure;

            cmd.Parameters.Add(new SqlParameter("@group_id", SqlDbType.Int));
            cmd.Parameters["@group_id"].Value = Convert.ToInt32(cmbl_gruposBin.EditValue.ToString());
            #endregion

            gridControl1.DataSource= dp.APMS_Exec_SP_Get_Data("Bins_ConsGeneral_xGrupo", cmd);          
        }


        void load_combo() {
            cmbl_gruposBin.Properties.DataSource = dp.APMS_Exec_SP_Get_Data("BinsGroup_ConsGeneral", new SqlCommand());
        }

        private void cmbl_gruposBin_EditValueChanged(object sender, EventArgs e)
        {
            load_grid();
        }

        private void btn_Salir_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void btn_Guardar_Click(object sender, EventArgs e)
        {
            Guardar_Datos_Grid();
        }

        void Guardar_Datos_Grid() {
            try
            {
                #region Guarando
                for (int i = 0; i < gridView1.DataRowCount; i++)
                {
                    #region Parametros_SP_Entrada
                    SqlCommand cmd = new SqlCommand();
                    cmd.CommandType = CommandType.StoredProcedure;

                    cmd.Parameters.Add(new SqlParameter("@id", SqlDbType.Int));
                    cmd.Parameters.Add(new SqlParameter("@fm", SqlDbType.Bit));
                    cmd.Parameters.Add(new SqlParameter("@rm", SqlDbType.Bit));
                    cmd.Parameters.Add(new SqlParameter("@fp", SqlDbType.Bit));
                    cmd.Parameters.Add(new SqlParameter("@nc", SqlDbType.Bit));


                    cmd.Parameters["@id"].Value = Convert.ToInt32(gridView1.GetDataRow(i)["id"]);

                    cmd.Parameters["@fm"].Value = Convert.ToByte(gridView1.GetDataRow(i)["allow_fm"] == DBNull.Value ? false : gridView1.GetDataRow(i)["allow_fm"]);
                    cmd.Parameters["@rm"].Value = Convert.ToByte(gridView1.GetDataRow(i)["allow_rm"] == DBNull.Value ? false : gridView1.GetDataRow(i)["allow_rm"]);
                    cmd.Parameters["@fp"].Value = Convert.ToByte(gridView1.GetDataRow(i)["allow_fp"] == DBNull.Value ? false : gridView1.GetDataRow(i)["allow_fp"]);
                    cmd.Parameters["@nc"].Value = Convert.ToByte(gridView1.GetDataRow(i)["allow_nc"] == DBNull.Value ? false : gridView1.GetDataRow(i)["allow_nc"]);
                    #endregion

                    dp.APMS_Exec_SP("Bins_UPD_MatPermitidos", cmd);
                }
                #endregion

                #region Activando_Botones
                btn_Guardar.Visible = false;
                btn_Cancelar.Visible = false;
                btn_Editar.Visible = true;
                gridReadOnly(true);
                load_grid();
                #endregion

            }
            catch (Exception ex)
            {
                #region Try-Catch_Mensaje-Error
                var dialogTypeName = "System.Windows.Forms.PropertyGridInternal.GridErrorDlg";
                var dialogType = typeof(Form).Assembly.GetType(dialogTypeName);
                var dialog = (Form)Activator.CreateInstance(dialogType, new PropertyGrid());
                dialog.Text = "Error";
                dialogType.GetProperty("Message").SetValue(dialog, "Error: " + ex.Message, null);
                dialogType.GetProperty("Details").SetValue(dialog, ex.StackTrace, null);
                var result = dialog.ShowDialog();
                #endregion
            }
        }

        private void btn_Editar_Click(object sender, EventArgs e)
        {
            btn_Cancelar.Visible = true;
            btn_Guardar.Visible = true;
            btn_Editar.Visible = false;
            gridReadOnly(false);
        }

        private void btn_Cancelar_Click(object sender, EventArgs e)
        {
            btn_Cancelar.Visible = false;
            btn_Guardar.Visible = false;
            btn_Editar.Visible = true;
            gridReadOnly(true);
            load_grid();
        }



        void gridReadOnly(Boolean allow) {
            gridView1.Columns["allow_fm"].OptionsColumn.ReadOnly = allow;
            gridView1.Columns["allow_rm"].OptionsColumn.ReadOnly = allow;
            gridView1.Columns["allow_fp"].OptionsColumn.ReadOnly = allow;
            gridView1.Columns["allow_nc"].OptionsColumn.ReadOnly = allow;       
        }



    }
}